---
title: "Mapping"
format: html
editor: visual
---

### Overview

Making maps is awesome and there are a ton of options/packages in R we can utiliize

Today, we are going to keep it simple and focus on the following

-   What is an sf object?

-   Gradient vs Discrete Coloring

-   Using familiar packages, `ggplot` and `plotly` to make a world map

### Libraries

```{r}
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(scales)
options(scipen = 99)
library(plotly)
```

### Load in World Data

```{r}
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
```

### Plotting

#### Static, blank world map

```{r}
ggplot(data = world) +
    geom_sf()
```

#### Gradient filled color map

```{r}
ggplot(data = world, aes(fill = pop_est)) +
    geom_sf()
```

#### Continuous to Discrete

```{r}
world <- world %>%
  mutate(pop_bin = cut(
    pop_est,
    breaks = c(0, 1000000, 10000000, 100000000, 500000000, Inf),  # Define meaningful ranges
    labels = c("<1M", "1M-10M", "10M-100M", "100M-500M", ">500M"),  # Bin labels
    include.lowest = TRUE
  ))
```

```{r}
ggplot(data = world, aes(fill = pop_bin)) +
    geom_sf() +
    scale_fill_viridis_d()
```

#### Interactivity

```{r}
world_pop_map_binned <- ggplot(data = world, aes(fill = pop_bin, label = formal_en)) +
    geom_sf() +
    scale_fill_viridis_d() +
  theme_minimal()

ggplotly(world_pop_map_binned)
```

### Challenge

Can you make a binned color map showing gdp by country?

```{r}
ggplot(data = world, aes(fill = gdp_md)) +
    geom_sf() 
```

```{r}
world <- world %>%
  mutate(gdp_bin = cut(
    gdp_md,
    breaks = c(0, 1000000, 10000000, 100000000, 500000000, Inf),  # Define meaningful ranges
    labels = c("<1M", "1M-10M", "10M-100M", "100M-500M", ">500M"),  # Bin labels
    include.lowest = TRUE
  ))
```

```{r}
ggplot(data = world, aes(fill = gdp_bin)) +
    geom_sf() +
    scale_fill_viridis_d()
```

```{r}
world_pop_map_binned <- ggplot(data = world, aes(label = formal_en, fill = gdp_bin)) +
    geom_sf() +
    scale_fill_viridis_d() +
  theme_minimal()

ggplotly(world_pop_map_binned)
```
